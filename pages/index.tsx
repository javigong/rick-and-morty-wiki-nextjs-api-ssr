import { motion } from "framer-motion";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { relative } from "path";
import { useEffect, useState } from "react";
import styles from "../styles/Home.module.css";

const defaultEndpoint = `https://rickandmortyapi.com/api/character/`;

export async function getServerSideProps() {
  const res = await fetch(defaultEndpoint);
  const data = await res.json();
  return {
    props: {
      data,
    },
  };
}

type Data = {
  [key: string | number]: string | [] | {} | null | undefined | Data;
  results: Results[];
  info: { next: string; current: string };
  data: {};
  id: number;
  name: string;
  image: string;
  current: string;
};

type Results = {
  [key: string | number]: string | [] | {} | Results;
};

export default function Home({ data }: { data: Data }) {
  const { info, results: defaultResults = [] } = data;
  const [results, setResults] = useState(defaultResults);
  const [page, setPage] = useState<any>({ ...info, current: defaultEndpoint });
  const { current } = page;

  useEffect(() => {
    if (current === defaultEndpoint) return;

    async function request() {
      const res = await fetch(current);
      const nextData = await res.json();

      setPage({
        current,
        ...nextData.info,
      });

      if (!nextData.info?.prev) {
        setResults(nextData.results);
        return;
      }

      setResults((prev) => {
        return [...prev, ...nextData.results];
      });
    }

    request();
  }, [current]);

  function handleLoadMore() {
    setPage((prev: any) => {
      return {
        ...prev,
        current: page?.next,
      };
    });
  }

  function handleOnSubmitSearch(e: any) {
    e.preventDefault();

    const { currentTarget = {} } = e;
    const fields = Array.from(currentTarget?.elements);
    const fieldQuery: any = fields.find((field: any) => field.name === "query");

    const value = fieldQuery.value || "";
    const endpoint = `https://rickandmortyapi.com/api/character/?name=${value}`;

    setPage({
      current: endpoint,
    });
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Rick and Morty Character Wiki</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <motion.div
          initial="hidden"
          animate="visible"
          variants={{
            hidden: {
              scale: 0.8,
              opacity: 0,
            },
            visible: {
              scale: 1,
              opacity: 1,
              transition: {
                delay: 0.4,
              },
            },
          }}
        >
          <h1 className={styles.title}>Wubba Lubba Dub Dub!</h1>
        </motion.div>

        <p className={styles.description}>Rick and Morty Character Wiki</p>

        <form className="search" onSubmit={handleOnSubmitSearch}>
          <input name="query" type="search" />
          <button>Search</button>
        </form>

        <ul className={styles.grid}>
          {results.map((result: any) => {
            const { id, name, image } = result;
            return (
              <motion.li key={id} className={styles.card} whileHover={{
                position: relative,
                zIndex: 1,
                backgroundColor: "black",
                scale: 1.2,
                transition: {
                  duration: .2,
                }
              }}>
                <Link href="/character/[id]" as={`/character/${id}`}>
                  <Image
                    width={250}
                    height={250}
                    src={image}
                    alt={`${name} Thumbnail`}
                  />
                  <h3>{name}</h3>
                </Link>
              </motion.li>
            );
          })}
        </ul>
        <p>
          <button onClick={handleLoadMore}>Load More</button>
        </p>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
